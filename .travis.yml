language: python
python:
#  - "2.7"
#  - "3.4"
  - 3.5
  - 3.6
  - 3.7
  - 3.8
  - 3.9
  - 3.9-dev
  - nightly
  # Also test pypy
  #- "pypy"      #pip3 not found
  #- "pypy3"     #no bueno
env:
  global:
    - PARALLELIZE=true #doesn't seem to do anything :-(

    - TWINE_USERNAME=__token__
    - CIBW_SKIP="cp27-* cp33-* cp34-* cp35-*"
    - CIBW_BEFORE_TEST="pip3 install -r requirements.txt"
    - CIBW_TEST_COMMAND="python3 {project}/FooFinder/test.py"
    #- CIBW_TEST_COMMAND="python -m unittest discover -f -s {project}/tests"
    # Note: TWINE_PASSWORD is set to a PyPI API token in Travis settings

## Ideal version, doesn't work
#matrix:
#  include:
#    - services: docker
#      arch: 
#        - amd64
#        - arm64
#        - ppc64le
#        - s390x
#    - os: osx
#      osx_image:
#        - xcode12u
#        - xcode11.3
#        - xcode10.2
#    - os: windows

language: python
jobs:
    ## linux ARMv8 build
    - services: docker
      arch: arm64
      python: nightly
    
    ## linux PPC64LE build
    - services: docker
      arch: ppc64le
      python: nightly
    
    ## linux S390X build
    - services: docker
      arch: s390x
      python: nightly

    ## osx build
    - os: osx
      osx_image: xcode12u
      language: generic
      env: PYTHON=39
    - os: osx
      osx_image: xcode11.3
      language: generic
      env: PYTHON=38
    - os: osx
      osx_image: xcode10.2
      language: generic
      env: PYTHON=37
    
    ## windows build
    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.9.0
        - export PATH="/c/Python39:/c/Python39/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        - ln -s /c/Python39/python.exe /c/Python39/python3.exe

install:
  #- python3 -m pip3 install -r requirements.txt
  #- python3 -m pip3 install cibuildwheel==1.6.4
script:
  ## unittest
  - python3 FooFinder/test.py

  ## cibuildwheel
  #- python3 -m cibuildwheel --output-dir wheelhouse
  
  ## pure python
  - pip3 install wheel
  - pip3 wheel -w wheelhouse .

after_success:

  - provider: releases
    token: $RELEASES_TOKEN
    file_glob: true
    file: wheelhouse/*.whl
    skip_cleanup: true
    on:
      tags: true
      condition: $TRAVIS_TAG
    edge: true # opt in to dpl v2

  - provider: pypi
    distributions: sdist bdist_wheel
    username: "__token__"
    password: $TWINE_PASSWORD
    on:
      tags: true
      condition: $TRAVIS_TAG
    edge: true # opt in to dpl v2

  #if the release was tagged, upload them to PyPI
  #python3 -m twine upload wheelhouse/*.whl
  #- |
  #  if [[ $TRAVIS_TAG ]]; then
  #    python3 -m pip3 install twine
  #    python3 -m twine upload --repository testpypi wheelhouse/*.whl
  #  fi