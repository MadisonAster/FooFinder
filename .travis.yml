language: python
python:
#  - "pypy"      #pip3 not found
#  - "pypy3"     #no bueno
#  - "2.7"
#  - "3.4"
  - "3.5"
  - "3.6"
  - "3.7"
  - "3.8"
  - "3.9"
  - "3.9-dev"
  - "nightly"
dist: xenial
os: linux
env:
  - PARALLELIZE=false
#  global:
#    #- PARALLELIZE=false #doesn't seem to do anything :-(
#
#    - TWINE_USERNAME=__token__
#    - CIBW_SKIP="cp27-* cp33-* cp34-* cp35-*"
#    - CIBW_BEFORE_TEST="pip3 install -r requirements.txt"
#    - CIBW_TEST_COMMAND="python3 {project}/FooFinder/test.py"
#    #- CIBW_TEST_COMMAND="python -m unittest discover -f -s {project}/tests"
#    # Note: TWINE_PASSWORD is set to a PyPI API token in Travis settings

## Ideal version, doesn't work
#matrix:
#  include:
#    - services: docker
#      arch: 
#        - amd64
#        - arm64
#        - ppc64le
#        - s390x
#    - os: osx
#      osx_image:
#        - xcode12u
#        - xcode11.3
#        - xcode10.2
#    - os: windows
#      arch:
#        - amd64
#        - x86

jobs:
    ## linux ARMv8 build
    - services: docker
      arch: arm64
      python: "nightly"
    
    ## linux PPC64LE build
    - services: docker
      arch: ppc64le
      python: "nightly"
    
    ## linux S390X build
    - services: docker
      arch: s390x
      python: "nightly"

    ## osx build
    - os: osx
      osx_image: xcode12u
      language: generic
      #language: shell
      #before_install:
      #  - export PATH=/Users/travis/.pyenv/shims:$PATH PYENV_VERSION=3.9.0
      #  - travis_wait brew upgrade pyenv && pyenv install $PYENV_VERSION
    - os: osx
      osx_image: xcode11.3
      language: generic
      #language: shell
      #before_install:
      #  - export PATH=/Users/travis/.pyenv/shims:$PATH PYENV_VERSION=3.8.0
      #  - travis_wait brew upgrade pyenv && pyenv install $PYENV_VERSION
    - os: osx
      osx_image: xcode10.2
      language: generic
      #language: shell
      #before_install:
      #  - export PATH=/Users/travis/.pyenv/shims:$PATH PYENV_VERSION=3.7.0
      #  - travis_wait brew upgrade pyenv && pyenv install $PYENV_VERSION
      
    ## windows build
    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.9.0
        - export PATH="/c/Python39:/c/Python39/Scripts:$PATH"
        - ln -s /c/Python39/python.exe /c/Python39/python3.exe

    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.9.0 --x86
        - export PATH="/c/Python39:/c/Python39/Scripts:$PATH"
        - ln -s /c/Python39/python.exe /c/Python39/python3.exe

    - stage: deployment
      services: docker
      python: nightly
      
install:
  #- python3 -m pip3 install -r requirements.txt
  #- python3 -m pip3 install cibuildwheel==1.6.4

script:
  ## unittests
  - python3 FooFinder/test.py

  ## cibuildwheel
  #- python3 -m cibuildwheel --output-dir wheelhouse
  
  ## pure python
  #- pip3 install wheel
  #- pip3 wheel -w wheelhouse .
  
deploy:
  - provider: releases
    token: $RELEASES_TOKEN
    file_glob: true
    file: dist/*
    #skip_cleanup: true
    on:
      tags: true
      condition: $TRAVIS_BUILD_STAGE_NAME = "deployment"
    edge: true # opt in to dpl v2

  - provider: pypi
    distributions: sdist bdist_wheel
    username: "__token__"
    password: $TWINE_PASSWORD
    on:
      tags: true
      condition: $TRAVIS_BUILD_STAGE_NAME = "deployment"
    edge: true # opt in to dpl v2

  #if the release was tagged, upload them to PyPI
  #python3 -m twine upload wheelhouse/*.whl
  #- |
  #  if [[ $TRAVIS_TAG ]]; then
  #    python3 -m pip3 install twine
  #    python3 -m twine upload --repository testpypi wheelhouse/*.whl
  #  fi

